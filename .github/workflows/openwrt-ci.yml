name: Build OpenWrt

on:
  workflow_dispatch:
    inputs:
        ssh:
          description: "Enable SSH debugging"
          required: false
          default: "false"
  # schedule:
  #   - cron: '0 20 * * *'

permissions:
  contents: write

env:
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
          - name: JDcloud_AX1800PRO
            config: JDcloud_AX1800PRO.config
          # - name: N1
          #   config: N1.config

    name: Build ${{ matrix.name }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          sudo -E apt update
          sudo -E apt install -y \
            build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses-dev libssl-dev python3 python3-pip rsync unzip zlib1g-dev \
            file wget libelf-dev ccache pipx
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Load custom feeds
        run: |
          # [ -e $FEEDS_CONF ] && mv $FEEDS_CONF ./feeds.conf.default
          [ -e $FEEDS_CONF ]
          chmod +x $DIY_P1_SH
          $GITHUB_WORKSPACE/$DIY_P1_SH
  
      - name: Update feeds
        run: ./scripts/feeds update -a
  
      - name: Install feeds
        run: ./scripts/feeds install -a
        
      - name: Setup tmate session (SSH debug)
        if: ${{ github.event.inputs.ssh == 'true' || contains(github.event.head_commit.message, '[ssh]') }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: false  # 仅允许触发者访问 SSH 会话

      - name: Start interactive SSH mode
        if: ${{ github.event.inputs.ssh == 'true' }}
        run: sleep 1200  # 给你 1 小时的 SSH 连接时间
        
      # - name: Load config file
      #   run: |
      #     cp configs/${{ matrix.config }} .config
      #     make defconfig

      - name: Download sources
        run: make download -j$(nproc)

      - name: Build OpenWrt
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Package firmware
        run: |
          mkdir -p output
          ZIP_NAME="${{ matrix.name }}_firmware_$(date +%Y%m%d).zip"
          zip -r "output/$ZIP_NAME" bin/targets

      - name: Upload firmware to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ matrix.name }}-${{ github.run_number }}
          name: "OpenWrt - ${{ matrix.name }} Build #${{ github.run_number }}"
          body: |
            自动构建设备：${{ matrix.name }}
            配置文件：${{ matrix.config }}
            构建时间：$(date +%Y-%m-%d)
          files: output/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
